// Code generated by goctl. DO NOT EDIT.
// Source: library.proto

package server

import (
	"context"

	"mathless-backend/app/library/cmd/rpc/internal/logic"
	"mathless-backend/app/library/cmd/rpc/internal/svc"
	"mathless-backend/app/library/cmd/rpc/library"
)

type LibraryServiceServer struct {
	svcCtx *svc.ServiceContext
	library.UnimplementedLibraryServiceServer
}

func NewLibraryServiceServer(svcCtx *svc.ServiceContext) *LibraryServiceServer {
	return &LibraryServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *LibraryServiceServer) CreateLibrary(ctx context.Context, in *library.CreateLibraryRequest) (*library.CreateLibraryResponse, error) {
	l := logic.NewCreateLibraryLogic(ctx, s.svcCtx)
	return l.CreateLibrary(in)
}

func (s *LibraryServiceServer) GetLibraries(ctx context.Context, in *library.GetLibrariesRequest) (*library.GetLibrariesResponse, error) {
	l := logic.NewGetLibrariesLogic(ctx, s.svcCtx)
	return l.GetLibraries(in)
}

func (s *LibraryServiceServer) DeleteLibrary(ctx context.Context, in *library.DeleteLibraryRequest) (*library.DeleteLibraryResponse, error) {
	l := logic.NewDeleteLibraryLogic(ctx, s.svcCtx)
	return l.DeleteLibrary(in)
}

func (s *LibraryServiceServer) UpdateLibrary(ctx context.Context, in *library.UpdateLibraryRequest) (*library.UpdateLibraryResponse, error) {
	l := logic.NewUpdateLibraryLogic(ctx, s.svcCtx)
	return l.UpdateLibrary(in)
}

func (s *LibraryServiceServer) PublishLibraryApply(ctx context.Context, in *library.PublishLibraryApplyRequest) (*library.PublishLibraryApplyResponse, error) {
	l := logic.NewPublishLibraryApplyLogic(ctx, s.svcCtx)
	return l.PublishLibraryApply(in)
}

func (s *LibraryServiceServer) PublishLibraryGranted(ctx context.Context, in *library.PublishLibraryGrantedRequest) (*library.PublishLibraryGrantedResponse, error) {
	l := logic.NewPublishLibraryGrantedLogic(ctx, s.svcCtx)
	return l.PublishLibraryGranted(in)
}

func (s *LibraryServiceServer) PublishLibraryDenied(ctx context.Context, in *library.PublishLibraryDeniedRequest) (*library.PublishLibraryDeniedResponse, error) {
	l := logic.NewPublishLibraryDeniedLogic(ctx, s.svcCtx)
	return l.PublishLibraryDenied(in)
}

func (s *LibraryServiceServer) CreateFunction(ctx context.Context, in *library.CreateFunctionRequest) (*library.CreateFunctionResponse, error) {
	l := logic.NewCreateFunctionLogic(ctx, s.svcCtx)
	return l.CreateFunction(in)
}

func (s *LibraryServiceServer) GetFunctions(ctx context.Context, in *library.GetFunctionsRequest) (*library.GetFunctionsResponse, error) {
	l := logic.NewGetFunctionsLogic(ctx, s.svcCtx)
	return l.GetFunctions(in)
}

func (s *LibraryServiceServer) DeleteFunction(ctx context.Context, in *library.DeleteFunctionRequest) (*library.DeleteFunctionResponse, error) {
	l := logic.NewDeleteFunctionLogic(ctx, s.svcCtx)
	return l.DeleteFunction(in)
}

func (s *LibraryServiceServer) UpdateFunction(ctx context.Context, in *library.UpdateFunctionRequest) (*library.UpdateFunctionResponse, error) {
	l := logic.NewUpdateFunctionLogic(ctx, s.svcCtx)
	return l.UpdateFunction(in)
}
