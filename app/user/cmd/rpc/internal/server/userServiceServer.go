// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"
	logic2 "mathless-backend/app/user/cmd/rpc/internal/logic"
	"mathless-backend/app/user/cmd/rpc/internal/svc"
	user2 "mathless-backend/app/user/cmd/rpc/user"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	user2.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

// 注册
func (s *UserServiceServer) RegisterUser(ctx context.Context, in *user2.RegisterUserRequest) (*user2.RegisterUserResponse, error) {
	l := logic2.NewRegisterUserLogic(ctx, s.svcCtx)
	user, err := l.RegisterUser(in)
	return user, err
}

// 登录
func (s *UserServiceServer) LoginUser(ctx context.Context, in *user2.LoginUserRequest) (*user2.LoginUserResponse, error) {
	l := logic2.NewLoginUserLogic(ctx, s.svcCtx)
	return l.LoginUser(in)
}

// 发送邮箱验证码
func (s *UserServiceServer) VerifyEmail(ctx context.Context, in *user2.VerifyEmailRequest) (*user2.VerifyEmailResponse, error) {
	l := logic2.NewVerifyEmailLogic(ctx, s.svcCtx)
	return l.VerifyEmail(in)
}
